// Generated by view binder compiler. Do not edit!
package com.aislingstuffthatmatters.personal_can_care.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.aislingstuffthatmatters.personal_can_care.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemNecessarySvcsBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final TextView necessarySvcDescriptionTxt;

  @NonNull
  public final TextView necessarySvcLocationTxt;

  @NonNull
  public final TextView necessarySvcNameTxt;

  private ItemNecessarySvcsBinding(@NonNull CardView rootView,
      @NonNull TextView necessarySvcDescriptionTxt, @NonNull TextView necessarySvcLocationTxt,
      @NonNull TextView necessarySvcNameTxt) {
    this.rootView = rootView;
    this.necessarySvcDescriptionTxt = necessarySvcDescriptionTxt;
    this.necessarySvcLocationTxt = necessarySvcLocationTxt;
    this.necessarySvcNameTxt = necessarySvcNameTxt;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemNecessarySvcsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemNecessarySvcsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_necessary_svcs, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemNecessarySvcsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.necessary_svc_description_txt;
      TextView necessarySvcDescriptionTxt = ViewBindings.findChildViewById(rootView, id);
      if (necessarySvcDescriptionTxt == null) {
        break missingId;
      }

      id = R.id.necessary_svc_location_txt;
      TextView necessarySvcLocationTxt = ViewBindings.findChildViewById(rootView, id);
      if (necessarySvcLocationTxt == null) {
        break missingId;
      }

      id = R.id.necessary_svc_name_txt;
      TextView necessarySvcNameTxt = ViewBindings.findChildViewById(rootView, id);
      if (necessarySvcNameTxt == null) {
        break missingId;
      }

      return new ItemNecessarySvcsBinding((CardView) rootView, necessarySvcDescriptionTxt,
          necessarySvcLocationTxt, necessarySvcNameTxt);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
